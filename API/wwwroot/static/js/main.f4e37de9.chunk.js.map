{"version":3,"sources":["app/components/AppPagination.tsx","app/components/CheckBoxButtons.tsx","app/components/RadioButtonGroup.tsx","app/layout/LoadingComponent.tsx","app/models/pagination.ts","app/api/agent.ts","app/util/util.ts","features/basket/basketSlice.ts","features/account/accountSlice.ts","features/catalog/catalogSlice.ts","features/contact/counterSlice.ts","app/store/configureStore.ts","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","features/catalog/ProductSearch.tsx","features/catalog/Catalog.tsx","app/layout/SignInMenu.tsx","app/layout/Hearder.tsx","features/home/HomePage.tsx","app/errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/about/AboutPage.tsx","features/contact/ContactPage.tsx","app/errors/ServerError.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","app/components/AppTextInput.tsx","app/components/AppCheckbox.tsx","features/checkout/AddressForm.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/checkoutValidation.ts","features/checkout/CheckoutPage.tsx","features/account/Login.tsx","features/account/Register.tsx","app/layout/PrivateRoute.tsx","features/orders/OrderDetail.tsx","features/orders/Orders.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["AppPagination","metaData","onPageChange","currentPage","totalCount","totalPages","pageSize","Box","display","justifyContent","alignItems","Typography","Pagination","color","size","count","page","onChange","e","CheckBoxButtons","items","checked","useState","checkedItems","setCheckedItems","FormGroup","map","item","FormControlLabel","control","Checkbox","indexOf","onClick","value","newChecked","findIndex","filter","handleChecked","label","RadioButtonGroup","options","selectedValue","FormControl","component","RadioGroup","Radio","LoadingComponent","message","Backdrop","open","invisible","height","CircularProgress","variant","sx","position","top","PaginatedResponse","this","axios","defaults","baseURL","process","withCredentials","responseBody","response","data","interceptors","request","use","config","token","store","getState","account","user","headers","Authorization","a","pagination","JSON","parse","error","status","errors","modelStateErrors","key","push","flat","toast","title","history","pathname","state","Promise","reject","url","params","get","then","body","post","delete","Basket","addItem","productId","quantity","removeItem","agent","Catalog","list","details","id","fetchFilters","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationError","Account","login","values","register","currentUser","fetchAddress","Orders","fetch","create","currencyFormat","amount","toFixed","fetchBasketAsync","createAsyncThunk","_","thunkAPI","rejectWithValue","condition","b","document","cookie","match","pop","getCookie","addBasketItemAsync","removeBasketItemAsync","basketSlice","createSlice","name","initialState","basket","reducers","setBasket","action","payload","clearBasket","extraReducers","builder","addCase","pending","meta","arg","fulfilled","itemIndex","i","undefined","splice","rejected","addMatcher","isAnyOf","actions","signInUser","userDto","dispatch","localStorage","setItem","stringify","fetchCurrentUser","setUser","getItem","accountSlice","signOut","productsAdapter","createEntityAdapter","getAxiosPrarms","productParams","URLSearchParams","append","pageNumber","toString","orderBy","searchTerm","brands","length","types","fetchProductsAsync","catalog","setMetaData","fetchProductAsync","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","setPageNumber","resetProductParams","setAll","console","log","upsertOne","productSelectors","getSelectors","counterSlice","increment","decrement","configureStore","reducer","counter","useAppDispatch","useDispatch","useAppSelector","useSelector","ProductCard","product","Card","CardHeader","avatar","Avatar","bgcolor","charAt","toUpperCase","titleTypographyProps","fontWeight","CardMedia","backgroundSize","image","pictureUrl","CardContent","gutterBottom","price","brand","type","CardActions","LoadingButton","loading","Button","Link","to","ProductCardSkeleton","Grid","xs","Skeleton","animation","width","style","marginBottom","ProductList","products","container","spacing","ProdcutSearch","setSerachTerm","debounceSearch","debounce","event","target","TextField","fullWidth","sortOptions","selectAll","useEffect","columnSpacing","Paper","mb","p","SignInMenu","React","anchorEl","setAnchorEl","Boolean","handleClose","currentTarget","typography","email","Menu","onClose","TransitionComponent","Fade","MenuItem","midLinks","path","rightLinks","navStyle","textDecoration","Header","darkMode","themeChangeHandler","itemCount","reduce","sum","AppBar","Toolbar","NavLink","exact","Switch","List","ListItem","IconButton","Badge","badgeContent","ShoppingCart","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","src","alt","maxHeight","NotFound","Container","Divider","ProductDetails","useParams","selectById","productStatus","setQuantity","find","parseInt","includes","TableContainer","Table","TableBody","TableRow","TableCell","description","quantityInStock","disabled","updatedQuantity","AboutPage","validationErrors","setValidationErrors","ButtonGroup","catch","Alert","severity","AlertTitle","ListItemText","ContactPage","ServerError","useHistory","useLocation","detail","BasketSummary","subtotal","deliveryFee","colSpan","align","fontStyle","BasketTable","isBasket","minWidth","TableHead","border","scope","marginRight","Remove","Add","Delete","BasketPage","AppTextInput","props","useController","defaultValue","fieldState","field","helperText","AppCheckbox","AddressForm","useFormContext","formState","sm","isDirty","PaymentForm","md","autoComplete","Review","validationSchema","yup","fullName","required","address1","address2","city","zip","country","nameOnCard","steps","getStepContent","step","Error","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","setLoading","currentValidationSchema","methods","useForm","mode","resolver","yupResolver","reset","getValues","saveAddress","handleNext","shippingAddress","my","Stepper","pt","pb","Step","StepLabel","onSubmit","handleSubmit","mt","ml","isValid","Login","location","isSubmitting","from","maxWidth","flexDirection","m","noValidate","margin","autoFocus","username","password","Register","setError","success","forEach","handleApiErrors","pattern","PrivateRoute","Component","rest","render","OrderDetail","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","selectedOrderNumber","setSelectedOrderNumber","finally","o","total","orderDate","split","App","initApp","useCallback","setDarkMode","paletteType","theme","createTheme","palette","background","default","ThemeProvider","hideProgressBar","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f4e37de9.chunk.js","sourcesContent":["import { Box, Typography, Pagination } from \"@mui/material\";\nimport { MetaData } from \"../models/pagination\";\n\ninterface Props {\n  metaData: MetaData;\n  onPageChange: (page: number) => void;\n}\n\nexport default function AppPagination({ metaData, onPageChange }: Props) {\n  const { currentPage, totalCount, totalPages, pageSize } = metaData;\n  return (\n    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Typography>\n        Displaying {(currentPage - 1) * pageSize + 1}-\n        {currentPage * pageSize > totalCount\n          ? totalCount\n          : currentPage * pageSize}{\" \"}\n        of {totalCount} items\n      </Typography>\n      <Pagination\n        color=\"secondary\"\n        size=\"large\"\n        count={totalPages}\n        page={currentPage}\n        onChange={(e, page) => onPageChange(page)}\n      />\n    </Box>\n  );\n}\n","import { FormGroup, FormControlLabel, Checkbox } from \"@mui/material\";\nimport { useState } from \"react\";\n\ninterface Props {\n  items: string[];\n  checked?: string[];\n  onChange: (items: string[]) => void;\n}\n\nexport default function CheckBoxButtons({ items, checked, onChange }: Props) {\n  const [checkedItems, setCheckedItems] = useState(checked || []);\n\n  function handleChecked(value: string) {\n    const currentIndex = checkedItems.findIndex((item) => item === value);\n    let newChecked: string[] = [];\n    if (currentIndex === - 1) newChecked = [...checkedItems, value];\n    else newChecked = checkedItems.filter((item) => item !== value);\n    setCheckedItems(newChecked);\n    onChange(newChecked);\n  }\n\n  return (\n    <FormGroup>\n      {items.map((item) => (\n        <FormControlLabel control={<Checkbox \n                checked={checkedItems.indexOf(item) !== -1}\n                onClick={() => handleChecked(item)}\n            />} \n            label={item} \n            key={item} \n        />\n      ))}\n    </FormGroup>\n  );\n}\n","import { FormControl, RadioGroup, FormControlLabel, Radio } from \"@mui/material\";\n\ninterface Props {\n    options: any[];\n    onChange: (event: any) => void;\n    selectedValue: string;\n}\n\nexport default function RadioButtonGroup ({options, onChange, selectedValue} : Props) {\n    return (\n        <FormControl component=\"fieldset\">\n            <RadioGroup onChange={onChange} value={selectedValue}>\n              {options.map(({value, label}) => (\n                <FormControlLabel value={value} control={<Radio />} label={label} key={value} />\n              ))}\n            </RadioGroup>\n          </FormControl>\n    )\n}","import { Backdrop, CircularProgress, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\ninterface Props {\n  message?: string;\n}\n\nexport default function LoadingComponent({ message = \"Loading\" }: Props) {\n  return (\n    <Backdrop open={true} invisible={true}>\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        height=\"100vh\"\n      >\n        <CircularProgress size={100} color=\"secondary\" />\n        <Typography\n          variant=\"h4\"\n          sx={{ justifyContent: \"center\", position: \"fixed\", top: \"60%\" }}\n        >\n          {message}\n        </Typography>\n      </Box>\n    </Backdrop>\n  );\n}\n","export interface MetaData {\n    currentPage: number;\n    totalPages: number;\n    pageSize: number;\n    totalCount: number;\n}\n\nexport class PaginatedResponse<T> {\n    items: T;\n    metaData: MetaData;\n\n    constructor(items: T, metaData: MetaData) {\n        this.items = items;\n        this.metaData = metaData;\n    }\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"../..\";\nimport { PaginatedResponse } from \"../models/pagination\";\nimport { store } from \"../store/configureStore\";\n\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 500));\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\naxios.defaults.withCredentials = true;\n\nconst responseBody = (response: AxiosResponse) => response.data;\n\naxios.interceptors.request.use(config => {\n    const token = store.getState().account.user?.token;\n    if (token) config.headers.Authorization = `Bearer ${token}`;\n    return config;\n})\n\naxios.interceptors.response.use(async response => {\n    if (process.env.NODE_ENV === 'development') {\n        await sleep();\n    }\n    // console.log(\"response bf pagiated\", response);\n    const pagination = response.headers['pagination'];\n    if (pagination) {\n        response.data = new PaginatedResponse(response.data, JSON.parse(pagination));\n        // console.log(\"response af pagiated\", response);\n        return response;\n    }\n    return response;\n}, (error: AxiosError) => {\n    // console.log(\"caught by interceptor\");\n    const { data, status } = error.response!;\n    switch (status) {\n        case 400:\n            if (data.errors) {\n                const modelStateErrors: string[] = [];\n                for (const key in data.errors) {\n                    if (data.errors[key]) {\n                        modelStateErrors.push(data.errors[key])\n                    }\n                }\n                throw modelStateErrors.flat();\n            }\n            toast.error(data.title);\n            break;\n        case 401:\n            toast.error(data.title);\n            break;\n        case 500:\n            history.push({\n                pathname: \"/server-error\",\n                state: { error: data }\n            });\n            break;\n        default:\n            break;\n    }\n    return Promise.reject(error.response);\n})\n\nconst request = {\n    get: (url: string, params?: URLSearchParams) => axios.get(url, { params }).then(responseBody),\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\n    delete: (url: string) => axios.delete(url).then(responseBody),\n}\n\nconst Catalog = {\n    list: (params: URLSearchParams) => request.get('products', params),\n    details: (id: number) => request.get(`products/${id}`),\n    fetchFilters: () => request.get('products/filters')\n}\n\nconst TestErrors = {\n    get400Error: () => request.get('buggy/bad-request'),\n    get401Error: () => request.get('buggy/unauthorised'),\n    get404Error: () => request.get('buggy/not-found'),\n    get500Error: () => request.get('buggy/server-error'),\n    getValidationError: () => request.get('buggy/validation-error'),\n}\n\nconst Basket = {\n    get: () => request.get('basket'),\n    addItem: (productId: number, quantity = 1) => request.post(`basket?productId=${productId}&quantity=${quantity}`, {}),\n    removeItem: (productId: number, quantity = 1) => request.delete(`basket?productId=${productId}&quantity=${quantity}`),\n}\n\nconst Account = {\n    login: (values: any) => request.post('account/login', values),\n    register: (values: any) => request.post('account/register', values),\n    currentUser: () => request.get('account/currentUser'),\n    fetchAddress: () => request.get(\"account/savedAddress\")\n}\n\nconst Orders = {\n    list: () => request.get('orders'),\n    fetch: (id: number) => request.get(`orders/${id}`),\n    create: (values: any) => request.post(\"orders\", values),\n}\n\nconst agent = {\n    Catalog,\n    TestErrors,\n    Basket,\n    Account,\n    Orders\n}\n\nexport default agent;","export function getCookie(key: string) {\n  const b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\n  return b ? b.pop() : \"\";\n}\n\nexport function currencyFormat(amount: number) {\n  return '$ ' + (amount / 100).toFixed(2)\n}","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\nimport agent from \"../../app/api/agent\";\nimport { Basket } from \"../../app/models/basket\";\nimport { getCookie } from \"../../app/util/util\";\n\ninterface BasketState {\n    basket: Basket | null;\n    status: string;\n}\n\nconst initialState: BasketState = {\n    basket: null,\n    status: 'idle'\n}\n\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\n    'basket/fetchBasketAsync',\n    async (_, thunkAPI) => {\n        try {\n            return await agent.Basket.get();\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({ error: error.data });\n        }\n    },\n    {\n        condition: () => {\n            if (!getCookie('buyerId')) return false;\n        }\n    }\n)\n\nexport const addBasketItemAsync = createAsyncThunk<Basket, { productId: number, quantity?: number }>(\n    'basket/addBasketItemAsync',\n    async ({ productId, quantity = 1 }, thunkAPI) => {\n        try {\n            return await agent.Basket.addItem(productId, quantity);\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({ error: error.data });\n        }\n    }\n)\n\nexport const removeBasketItemAsync = createAsyncThunk<void, { productId: number, quantity: number, name?: string }>(\n    'basket/removeBasketItemAsync',\n    async ({ productId, quantity }, thunkAPI) => {\n        try {\n            await agent.Basket.removeItem(productId, quantity);\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({ error: error.data });\n        }\n    }\n)\n\nexport const basketSlice = createSlice({\n    name: 'basket',\n    initialState,\n    reducers: {\n        setBasket: (state, action) => {\n            state.basket = action.payload\n        },\n        clearBasket: (state) => {\n            state.basket = null;\n        }\n        // removeItem: (state, action) => {\n        //     const { productId, quantity } = action.payload;\n        //     const itemIndex = state.basket?.items.findIndex(i => i.productId === productId);\n        //     if (itemIndex === -1 || itemIndex === undefined) return;\n        //     state.basket!.items[itemIndex].quantity -= quantity;\n        //     if (state.basket?.items[itemIndex].quantity === 0) \n        //        state.basket.items.splice(itemIndex, 1);\n        // }\n    },\n    extraReducers: (builder => {\n        builder.addCase(addBasketItemAsync.pending, (state, action) => {\n            // console.log(action);\n            state.status = 'pendingAddItem' + action.meta.arg.productId;\n        });\n\n        builder.addCase(removeBasketItemAsync.pending, (state, action) => {\n            state.status = 'pendingRemoveItem' + action.meta.arg.productId + action.meta.arg.name;\n        });\n        builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\n            const { productId, quantity } = action.meta.arg;\n            const itemIndex = state.basket?.items.findIndex(i => i.productId === productId);\n            if (itemIndex === -1 || itemIndex === undefined) return;\n            state.basket!.items[itemIndex].quantity -= quantity;\n            if (state.basket?.items[itemIndex].quantity === 0) state.basket.items.splice(itemIndex, 1);\n            // console.log(\"itemRemove: \", itemIndex)\n            state.status = 'idle';\n        });\n        builder.addCase(removeBasketItemAsync.rejected, (state) => {\n            state.status = 'idle';\n            // console.log(action.payload);\n        });\n        builder.addMatcher(isAnyOf(addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled), (state, action) => {\n            state.basket = action.payload;\n            state.status = 'idle';\n        });\n        builder.addMatcher(isAnyOf(addBasketItemAsync.rejected, fetchBasketAsync.rejected), (state) => {\n            state.status = 'idle';\n        });\n    })\n})\n\nexport const { setBasket, clearBasket } = basketSlice.actions","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\nimport { FieldValues } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"../..\";\nimport agent from \"../../app/api/agent\";\nimport { User } from \"../../app/models/user\";\nimport { setBasket } from \"../basket/basketSlice\";\n\ninterface AccountState {\n    user: User | null;\n\n}\n\nconst initialState: AccountState = {\n    user: null\n}\n\nexport const signInUser = createAsyncThunk<User, FieldValues>(\n    'account/signInUser',\n    async (data, thunkAPI) => {\n        try {\n            const userDto = await agent.Account.login(data);\n            const { basket, ...user } = userDto;\n            if (basket) thunkAPI.dispatch(setBasket(basket));\n            localStorage.setItem('user', JSON.stringify(user));\n            return user;\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({ error: error.data });\n        }\n    }\n)\nexport const fetchCurrentUser = createAsyncThunk<User>(\n    'account/fetchCurrentUser',\n    async (_, thunkAPI) => {\n        thunkAPI.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)));\n        try {\n            const userDto = await agent.Account.currentUser();\n            const { basket, ...user } = userDto;\n            if (basket) thunkAPI.dispatch(setBasket(basket));\n            localStorage.setItem('user', JSON.stringify(user));\n            return user;\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({ error: error.data });\n        }\n    },\n    {\n        condition: () => {\n            if (!localStorage.getItem('user')) return false;\n        }\n    }\n)\n\nexport const accountSlice = createSlice({\n    name: 'account',\n    initialState,\n    reducers: {\n        signOut: (state) => {\n            state.user = null;\n            localStorage.removeItem('user');\n            history.push('/');\n        },\n        setUser: (state, action) => {\n            state.user = action.payload;\n        }\n    },\n    extraReducers: (builder => {\n        builder.addCase(fetchCurrentUser.rejected, (state) => {\n            state.user = null;\n            localStorage.removeItem('user');\n            toast.error('Session expired - please login again');\n            history.push('/');\n        })\n        builder.addMatcher(isAnyOf(signInUser.fulfilled, fetchCurrentUser.fulfilled), (state, action) => {\n            state.user = action.payload;\n        });\n\n        builder.addMatcher(isAnyOf(signInUser.rejected), (state, action) => {\n            throw action.payload\n        })\n    })\n})\n\nexport const { signOut, setUser } = accountSlice.actions;","import { createAsyncThunk, createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\nimport agent from \"../../app/api/agent\";\nimport { MetaData } from \"../../app/models/pagination\";\nimport { Product, ProductParams } from \"../../app/models/product\";\nimport { RootState } from \"../../app/store/configureStore\";\n\ninterface CatalogState {\n    productsLoaded: boolean;\n    filtersLoaded: boolean;\n    status: string;\n    brands: string[];\n    types: string[];\n    productParams: ProductParams;\n    metaData: MetaData | null;\n}\n\nconst productsAdapter = createEntityAdapter<Product>();\n\nfunction getAxiosPrarms(productParams: ProductParams) {\n    const params = new URLSearchParams();\n    params.append('pageNumber', productParams.pageNumber.toString());\n    params.append('pageSize', productParams.pageSize.toString());\n    params.append('orderBy', productParams.orderBy);\n    if (productParams.searchTerm) params.append('searchTerm', productParams.searchTerm);\n    if (productParams.brands?.length > 0) params.append('brands', productParams.brands.toString());\n    if (productParams.types?.length > 0) params.append('types', productParams.types.toString());\n    return params;\n}\n\nexport const fetchProductsAsync = createAsyncThunk<Product[], void, { state: RootState }>(\n    'catalog/fetchProductsAsync',\n    async (_, thunkAPI) => {\n        const params = getAxiosPrarms(thunkAPI.getState().catalog.productParams);\n        try {\n            const response = await agent.Catalog.list(params);\n            thunkAPI.dispatch(setMetaData(response.metaData));\n            return response.items;\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({ error: error.data });\n        }\n    }\n)\n\nexport const fetchProductAsync = createAsyncThunk<Product, number>(\n    'catalog/fetchProductAsync',\n    async (productId, thunkAPI) => {\n        try {\n            return await agent.Catalog.details(productId);\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({ error: error.data })\n        }\n    }\n)\n\nexport const fetchFilters = createAsyncThunk(\n    'catalog/fetchFilters',\n    async (_, thunkAPI) => {\n        try {\n            return await agent.Catalog.fetchFilters();\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({ error: error.data });\n        }\n    }\n)\n\nfunction initParams() {\n    return {\n        pageNumber: 1,\n        pageSize: 6,\n        orderBy: 'name',\n        brands: [],\n        types: []\n    }\n}\n\nexport const catalogSlice = createSlice({\n    name: 'catalog',\n    initialState: productsAdapter.getInitialState<CatalogState>({\n        productsLoaded: false,\n        filtersLoaded: false,\n        status: 'idle',\n        brands: [],\n        types: [],\n        productParams: initParams(),\n        metaData: null\n    }),\n    reducers: {\n        setProductParams: (state, action) => {\n            state.productsLoaded = false;\n            state.productParams = { ...state.productParams, ...action.payload, pageNumber: 1 };\n        },\n        setPageNumber: (state, action) => {\n            state.productsLoaded = false;\n            state.productParams = { ...state.productParams, ...action.payload };\n        },\n        setMetaData: (state, action) => {\n            state.metaData = action.payload;\n        },\n        resetProductParams: (state) => {\n            state.productParams = initParams();\n        }\n    },\n    extraReducers: (builder => {\n        builder.addCase(fetchProductsAsync.pending, (state) => {\n            state.status = 'pendingFetchProducts';\n        });\n        builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\n            productsAdapter.setAll(state, action.payload);\n            state.status = 'idle';\n            state.productsLoaded = true;\n        });\n        builder.addCase(fetchProductsAsync.rejected, (state, action) => {\n            console.log(action.payload);\n            state.status = 'idle';\n        })\n        builder.addCase(fetchProductAsync.pending, (state) => {\n            state.status = 'pendingFetchProduct';\n        });\n        builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\n            productsAdapter.upsertOne(state, action.payload);\n            state.status = \"idle\";\n        });\n        builder.addCase(fetchProductAsync.rejected, (state, action) => {\n            console.log(action);\n            state.status = 'idle';\n        });\n        builder.addCase(fetchFilters.pending, (state) => {\n            state.status = 'pendingFetchFilters';\n        });\n        builder.addCase(fetchFilters.fulfilled, (state, action) => {\n            state.status = 'idle';\n            state.brands = action.payload.brands;\n            state.types = action.payload.types;\n            state.filtersLoaded = true;\n        });\n        builder.addCase(fetchFilters.rejected, (state, action) => {\n            state.status = 'idle';\n            console.log(action.payload);\n        })\n    })\n});\n\nexport const productSelectors = productsAdapter.getSelectors((state: RootState) => state.catalog);\n\nexport const { setProductParams, resetProductParams, setMetaData, setPageNumber } = catalogSlice.actions;","import { createSlice } from \"@reduxjs/toolkit\"\n\nexport interface CounterState {\n    data: number;\n    title: string;\n}\n\nconst initialState: CounterState = {\n    data: 42,\n    title: \"YARC (yet another redux counter with redux toolkit)\"\n}\n\nexport const counterSlice = createSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        increment: (state, action) => {\n            state.data += action.payload\n        },\n        decrement: (state, action) => {\n            state.data -= action.payload\n        }\n    }\n})\n\nexport const { increment, decrement } = counterSlice.actions;","import { configureStore } from \"@reduxjs/toolkit\";\n// import { type } from \"os\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { accountSlice } from \"../../features/account/accountSlice\";\nimport { basketSlice } from \"../../features/basket/basketSlice\";\nimport { catalogSlice } from \"../../features/catalog/catalogSlice\";\n// import { createStore } from \"redux\";\n// import counterReducer from \"../../features/contact/counterReducer\";\nimport { counterSlice } from \"../../features/contact/counterSlice\";\n\n// export function configureStore() {\n//     return createStore(counterReducer);\n// }\n\nexport const store = configureStore({\n    reducer: {\n        counter: counterSlice.reducer,\n        basket: basketSlice.reducer,\n        catalog: catalogSlice.reducer,\n        account: accountSlice.reducer\n    }\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import { LoadingButton } from \"@mui/lab\";\nimport {\n  Avatar,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  Typography,\n} from \"@mui/material\";\n// import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import agent from \"../../app/api/agent\";\n// import { useStoreContext } from \"../../app/context/StoreContext\";\nimport { Product } from \"../../app/models/product\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { currencyFormat } from \"../../app/util/util\";\nimport { addBasketItemAsync } from \"../basket/basketSlice\";\n\ninterface Props {\n  product: Product;\n}\n\nexport default function ProductCard({ product }: Props) {\n  // const [loading, setLoading] = useState(false);\n  // const { setBasket } = useStoreContext();\n  const { status } = useAppSelector((state) => state.basket);\n  const dispatch = useAppDispatch();\n\n  // function handleAddItem(productId: number) {\n  //   setLoading(true);\n  //   agent.Basket.addItem(productId)\n  //     .then((basket) => dispatch(setBasket(basket)))\n  //     .catch((error) => console.log(error))\n  //     .finally(() => setLoading(false));\n  // }\n\n  return (\n    <Card>\n      <CardHeader\n        avatar={\n          <Avatar sx={{ bgcolor: \"secondary.main\" }}>\n            {product.name.charAt(0).toUpperCase()}\n          </Avatar>\n        }\n        title={product.name}\n        titleTypographyProps={{\n          sx: { fontWeight: \"bold\", color: \"primary.main\" },\n        }}\n      />\n      <CardMedia\n        sx={{\n          height: 140,\n          backgroundSize: \"contain\",\n          bgcolor: \"primary.light\",\n        }}\n        image={product.pictureUrl}\n        title={product.name}\n      />\n      <CardContent>\n        <Typography gutterBottom color=\"secondary\" variant=\"h5\">\n          {currencyFormat(product.price)}\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {product.brand} / {product.type}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <LoadingButton\n          loading={status === \"pendingAddItem\" + product.id}\n          size=\"small\"\n          onClick={() =>\n            dispatch(addBasketItemAsync({ productId: product.id }))\n          }\n        >\n          Add to cart\n        </LoadingButton>\n        <Button component={Link} to={`/catalog/${product.id}`} size=\"small\">\n          View\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import {\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Grid,\n  Skeleton,\n} from \"@mui/material\";\n\nexport default function ProductCardSkeleton() {\n  return (\n    <Grid item xs component={Card}>\n      <CardHeader\n        avatar={\n          <Skeleton\n            animation=\"wave\"\n            variant=\"circular\"\n            width={40}\n            height={40}\n          />\n        }\n        title={\n          <Skeleton\n            animation=\"wave\"\n            height={10}\n            width=\"80%\"\n            style={{ marginBottom: 6 }}\n          />\n        }\n      />\n      <Skeleton sx={{ height: 190 }} animation=\"wave\" variant=\"rectangular\" />\n      <CardContent>\n        <>\n          <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n          <Skeleton animation=\"wave\" height={10} width=\"80%\" />\n        </>\n      </CardContent>\n      <CardActions>\n        <>\n          <Skeleton animation=\"wave\" height={10} width=\"40%\" />\n          <Skeleton animation=\"wave\" height={10} width=\"20%\" />\n        </>\n      </CardActions>\n    </Grid>\n  );\n}\n","import { Grid } from \"@mui/material\";\nimport { Product } from \"../../app/models/product\";\nimport { useAppSelector } from \"../../app/store/configureStore\";\nimport ProductCard from \"./ProductCard\";\nimport ProductCardSkeleton from \"./ProductCardSkeleton\";\n\ninterface Props {\n  products: Product[];\n}\n\nexport default function ProductList({ products }: Props) {\n  const { productsLoaded } = useAppSelector((state) => state.catalog);\n  return (\n    <Grid container spacing={4}>\n      {products.map((product) => (\n        <Grid item xs={4} key={product.id}>\n          {!productsLoaded ? (\n            <ProductCardSkeleton />\n          ) : (\n            <ProductCard product={product} />\n          )}\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n","import { debounce, TextField } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { setProductParams } from \"./catalogSlice\";\n\nexport default function ProdcutSearch() {\n  const { productParams } = useAppSelector((state) => state.catalog);\n  const [searchTerm, setSerachTerm] = useState(productParams.searchTerm);\n  const dispatch = useAppDispatch();\n\n  const debounceSearch = debounce((event: any) => {\n    dispatch(setProductParams({ searchTerm: event.target.value }));\n  }, 1000);\n\n  return (\n    <TextField\n      label=\"Search products\"\n      variant=\"outlined\"\n      fullWidth\n      value={searchTerm || \"\"}\n      onChange={(event: any) => {\n        setSerachTerm(event.target.value);\n        debounceSearch(event);\n      }}\n    />\n  );\n}\n","import { Grid, Paper } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport AppPagination from \"../../app/components/AppPagination\";\nimport CheckBoxButtons from \"../../app/components/CheckBoxButtons\";\nimport RadioButtonGroup from \"../../app/components/RadioButtonGroup\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport {\n  fetchFilters,\n  fetchProductsAsync,\n  productSelectors,\n  setPageNumber,\n  setProductParams,\n} from \"./catalogSlice\";\nimport ProductList from \"./ProductList\";\nimport ProdcutSearch from \"./ProductSearch\";\n\nconst sortOptions = [\n  { value: \"name\", label: \"Alphabetical\" },\n  { value: \"priceDesc\", label: \"Price - High to low\" },\n  { value: \"price\", label: \"Price - Low to high\" },\n];\n\nexport default function Catalog() {\n  // const [products, setProducts] = useState<Product[]>([]);\n  // const [loading, setLoading] = useState(true);\n  const products = useAppSelector(productSelectors.selectAll);\n  const {\n    productsLoaded,\n    filtersLoaded,\n    brands,\n    types,\n    productParams,\n    metaData,\n  } = useAppSelector((state) => state.catalog);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    // agent.Catalog.list()\n    //   .then((products: any) => setProducts(products))\n    //   .catch((error) => console.log(error))\n    //   .finally(() => setLoading(false));\n    if (!productsLoaded) dispatch(fetchProductsAsync());\n  }, [dispatch, productsLoaded]);\n\n  useEffect(() => {\n    if (!filtersLoaded) dispatch(fetchFilters());\n  }, [dispatch, filtersLoaded]);\n\n  if (!filtersLoaded) return <LoadingComponent message=\"Loading products...\" />;\n\n  return (\n    <Grid container columnSpacing={4}>\n      <Grid item xs={3}>\n        <Paper sx={{ mb: 2 }}>\n          <ProdcutSearch />\n        </Paper>\n        <Paper sx={{ mb: 2, p: 2 }}>\n          <RadioButtonGroup\n            selectedValue={productParams.orderBy}\n            options={sortOptions}\n            onChange={(e) =>\n              dispatch(setProductParams({ orderBy: e.target.value }))\n            }\n          />\n        </Paper>\n        <Paper sx={{ mb: 2, p: 2 }}>\n          <CheckBoxButtons\n            items={brands}\n            checked={productParams.brands}\n            onChange={(items: string[]) =>\n              dispatch(setProductParams({ brands: items }))\n            }\n          />\n        </Paper>\n        <Paper sx={{ mb: 2, p: 2 }}>\n          <CheckBoxButtons\n            items={types}\n            checked={productParams.types}\n            onChange={(items: string[]) =>\n              dispatch(setProductParams({ types: items }))\n            }\n          />\n        </Paper>\n      </Grid>\n      <Grid item xs={9}>\n        <ProductList products={products} />\n      </Grid>\n      <Grid item xs={3} />\n      <Grid item xs={9} sx={{ mb: 2 }}>\n        {metaData && (\n          <AppPagination\n            metaData={metaData}\n            onPageChange={(page: number) =>\n              dispatch(setPageNumber({ pageNumber: page }))\n            }\n          />\n        )}\n      </Grid>\n    </Grid>\n  );\n}\n","import { Button, Menu, Fade, MenuItem } from \"@mui/material\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { signOut } from \"../../features/account/accountSlice\";\nimport { clearBasket } from \"../../features/basket/basketSlice\";\nimport { useAppDispatch, useAppSelector } from \"../store/configureStore\";\n\nexport default function SignInMenu() {\n  const dispatch = useAppDispatch();\n  const { user } = useAppSelector((state) => state.account);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: any) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      <Button color=\"inherit\" onClick={handleClick} sx={{ typography: \"h6\" }}>\n        {user?.email}\n      </Button>\n      <Menu\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Fade}\n      >\n        <MenuItem onClick={handleClose}>Profile</MenuItem>\n        <MenuItem component={Link} to=\"/orders\" onClick={handleClose}>\n          My Orders\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            dispatch(signOut());\n            dispatch(clearBasket());\n          }}\n        >\n          Logout\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n","import { ShoppingCart } from \"@mui/icons-material\";\nimport { AppBar, Badge, IconButton, List, ListItem, Switch, Toolbar, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Link, NavLink } from \"react-router-dom\";\n// import { useStoreContext } from \"../context/StoreContext\";\nimport { useAppSelector } from \"../store/configureStore\";\nimport SignInMenu from \"./SignInMenu\";\n\ninterface Props {\n  darkMode: boolean;\n  themeChangeHandler: () => void;\n}\n\nconst midLinks = [\n  { title: \"catalog\", path: \"/catalog\" },\n  { title: \"about\", path: \"/about\" },\n  { title: \"contact\", path: \"/contact\" },\n];\n\nconst rightLinks = [\n  { title: \"login\", path: \"/login\" },\n  { title: \"register\", path: \"/register\" },\n];\n\nconst navStyle = {\n  color: \"inherit\",\n  typography: \"h6\",\n  \"&:hover\": {\n    color: \"grey.500\",\n  },\n  \"&.active\": {\n    color: \"text.secondary\",\n  },\n  textDecoration: \"none\",\n};\n\nexport default function Header({ darkMode, themeChangeHandler }: Props) {\n  // const { basket } = useStoreContext();\n  const { basket } = useAppSelector((state) => state.basket);\n  const { user } = useAppSelector((state) => state.account);\n  const itemCount = basket?.items.reduce((sum, item) => sum + item.quantity, 0);\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar\n        sx={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <Box display=\"flex\" alignItems=\"center\">\n          <Typography\n            variant=\"h6\"\n            component={NavLink}\n            to=\"/\"\n            exact\n            sx={navStyle}\n          >\n            Store\n          </Typography>\n          <Switch checked={darkMode} onChange={themeChangeHandler} />\n        </Box>\n\n        <List sx={{ display: \"flex\" }}>\n          {midLinks.map(({ title, path }) => (\n            <ListItem component={NavLink} to={path} key={path} sx={navStyle}>\n              {title.toUpperCase()}\n            </ListItem>\n          ))}\n        </List>\n\n        <Box display=\"flex\" alignItems=\"center\">\n          <IconButton\n            component={Link}\n            to=\"/basket\"\n            size=\"large\"\n            sx={{ color: \"inherit\" }}\n          >\n            <Badge badgeContent={itemCount} color=\"secondary\">\n              <ShoppingCart />\n            </Badge>\n          </IconButton>\n          {user ? (\n            <SignInMenu />\n          ) : (\n            <List sx={{ display: \"flex\" }}>\n              {rightLinks.map(({ title, path }) => (\n                <ListItem\n                  component={NavLink}\n                  to={path}\n                  key={path}\n                  sx={navStyle}\n                >\n                  {title.toUpperCase()}\n                </ListItem>\n              ))}\n            </List>\n          )}\n        </Box>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import { Box, Typography } from \"@mui/material\";\nimport Slider from \"react-slick\";\n\nexport default function HomePage() {\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n  return (\n    <>\n      <Slider {...settings}>\n        <div>\n          <img src=\"/images/hero1.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}} />\n        </div>\n        <div>\n          <img src=\"/images/hero2.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}} />\n        </div>\n        <div>\n          <img src=\"/images/hero3.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}} />\n        </div>\n      </Slider>\n      <Box display='flex' justifyContent='center' sx={{p: 4}}>\n        <Typography variant=\"h1\">Welcome to the shop</Typography>\n      </Box>\n    </>\n  )\n}\n","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\nexport default function NotFound() {\n  return (\n    <Container component={Paper} sx={{ height: 400 }}>\n      <Typography gutterBottom variant=\"h3\">\n        Oops - we could not find what you are looking for\n      </Typography>\n\n      <Divider />\n      <Button fullWidth component={Link} to=\"/catalog\">\n        Go back to shop\n      </Button>\n    </Container>\n  );\n}\n","import { LoadingButton } from \"@mui/lab\";\nimport {\n  Divider,\n  Grid,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n// import { useStoreContext } from \"../../app/context/StoreContext\";\nimport NotFound from \"../../app/errors/NotFound\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { currencyFormat } from \"../../app/util/util\";\nimport { addBasketItemAsync, removeBasketItemAsync } from \"../basket/basketSlice\";\nimport { fetchProductAsync, productSelectors } from \"./catalogSlice\";\n\nexport default function ProductDetails() {\n  // const { basket, setBasket, removeItem } = useStoreContext();\n  const { basket, status } = useAppSelector((state) => state.basket);\n  const dispatch = useAppDispatch();\n  const { id } = useParams<{ id: string }>();\n  // const [product, setProduct] = useState<Product | null>(null);\n  const product = useAppSelector(state => productSelectors.selectById(state, id));\n  const {status: productStatus} = useAppSelector(state => state.catalog);\n\n  // const [loading, setLoading] = useState(true);\n  const [quantity, setQuantity] = useState(0);\n  // const [submitting, setSubmitting] = useState(false);\n  const item = basket?.items.find((i) => i.productId === product?.id);\n\n  useEffect(() => {\n    if (item) setQuantity(item.quantity);\n    // agent.Catalog.details(parseInt(id))\n    //   .then((response: any) => setProduct(response))\n    //   .catch((error) => console.log(error))\n    //   .finally(() => setLoading(false));\n    if(!product) dispatch(fetchProductAsync(parseInt(id)));\n  }, [id, item, dispatch, product]);\n\n  function handleInputChange(event: any) {\n    if (event.target.value >= 0) {\n      setQuantity(parseInt(event.target.value));\n    }\n  }\n\n  function handleUpdateCart() {\n    // setSubmitting(true);\n    if (!item || quantity > item.quantity) {\n      const updatedQuantity = item ? quantity - item.quantity : quantity;\n      // agent.Basket.addItem(product?.id!, updatedQuantity)\n      //   .then((basket) => dispatch(setBasket(basket)))\n      //   .catch((error) => console.log(error))\n      //   .finally(() => setSubmitting(false));\n      dispatch(addBasketItemAsync({productId: product?.id!, quantity: updatedQuantity}))\n    } else {\n      const updatedQuantity = item.quantity - quantity;\n      // agent.Basket.removeItem(product?.id!, updatedQuantity)\n      //   .then(() =>\n      //     dispatch(removeItem({ productId: product?.id!, quantity: updatedQuantity })))\n      //   .catch((error) => console.log(error))\n      //   .finally(() => setSubmitting(false));\n      dispatch(removeBasketItemAsync({productId: product?.id!, quantity: updatedQuantity}))\n    }\n  }\n\n  if (productStatus.includes('pending')) return <LoadingComponent message=\"Loading product...\" />;\n\n  if (!product) return <NotFound />;\n\n  return (\n    <Grid container spacing={6}>\n      <Grid item xs={6}>\n        <img\n          src={product.pictureUrl}\n          alt={product.name}\n          style={{ width: \"100%\" }}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <Typography variant=\"h3\">{product.name}</Typography>\n        <Divider sx={{ mb: 2 }} />\n        <Typography variant=\"h4\" color=\"secondary\">\n          {currencyFormat(product.price)}\n        </Typography>\n        <TableContainer>\n          <Table>\n            <TableBody>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>{product.name}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>Description</TableCell>\n                <TableCell>{product.description}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>Type</TableCell>\n                <TableCell>{product.type}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>Brand</TableCell>\n                <TableCell>{product.brand}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>Quantity in stock</TableCell>\n                <TableCell>{product.quantityInStock}</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <TextField\n              onChange={handleInputChange}\n              variant=\"outlined\"\n              type=\"number\"\n              label=\"Quantity in Cart\"\n              fullWidth\n              value={quantity}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <LoadingButton\n              disabled={\n                item?.quantity === quantity || (!item && quantity === 0)\n              }\n              loading={status.includes('pending')}\n              onClick={handleUpdateCart}\n              sx={{ height: \"55px\" }}\n              color=\"primary\"\n              size=\"large\"\n              variant=\"contained\"\n              fullWidth\n            >\n              {item ? \"Update Quantity\" : \"Add to Cart\"}\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\n\n","import {\n  Alert,\n  AlertTitle,\n  Button,\n  ButtonGroup,\n  Container,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n} from \"@mui/material\";\nimport { useState } from \"react\";\nimport agent from \"../../app/api/agent\";\n\nexport default function AboutPage() {\n  const [validationErrors, setValidationErrors] = useState<string[]>([]);\n\n  function getValidationError() {\n    agent.TestErrors.getValidationError()\n      .then(() => console.log(\"Should not see this\"))\n      .catch((error) => setValidationErrors(error));\n  }\n\n  return (\n    <Container>\n      <Typography gutterBottom variant=\"h2\">\n        Errors for testing purposes\n      </Typography>\n      <ButtonGroup fullWidth>\n        <Button\n          variant=\"contained\"\n          onClick={() =>\n            agent.TestErrors.get400Error().catch((error) => {\n              console.log(error);\n            })\n          }\n        >\n          Test 400 Error\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={() =>\n            agent.TestErrors.get401Error().catch((error) => {\n              console.log(error);\n            })\n          }\n        >\n          Test 401 Error\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={() =>\n            agent.TestErrors.get404Error().catch((error) => {\n              console.log(error);\n            })\n          }\n        >\n          Test 404 Error\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={() =>\n            agent.TestErrors.get500Error().catch((error) => {\n              console.log(error);\n            })\n          }\n        >\n          Test 500 Error\n        </Button>\n        <Button variant=\"contained\" onClick={getValidationError}>\n          Test Validation Error\n        </Button>\n      </ButtonGroup>\n      {validationErrors.length > 0 && (\n        <Alert severity=\"error\">\n          <AlertTitle>ValidationErrors</AlertTitle>\n          <List>\n            {validationErrors.map((error) => (\n              <ListItem key={error}>\n                <ListItemText>{error}</ListItemText>\n              </ListItem>\n            ))}\n          </List>\n        </Alert>\n      )}\n    </Container>\n  );\n}\n","import { Button, ButtonGroup, Typography } from \"@mui/material\";\n// import { useDispatch, useSelector } from \"react-redux\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { decrement, increment } from \"./counterSlice\";\n\nexport default function ContactPage() {\n  // const dispatch = useDispatch();\n  const dispatch = useAppDispatch();\n  // const { data, title } = useSelector((state: CounterState) => state);\n  const { data, title } = useAppSelector(state => state.counter);\n \n  return (\n    <>\n      <Typography variant=\"h2\">{title}</Typography>\n      <Typography variant=\"h5\">\"The data is: \" {data}</Typography>\n      <ButtonGroup>\n        <Button\n          onClick={() => dispatch(decrement(1))}\n          variant=\"contained\"\n          color=\"error\"\n        >\n          Decrement\n        </Button>\n        <Button\n          onClick={() => dispatch(increment(1))}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Increment\n        </Button>\n        <Button\n          onClick={() => dispatch(increment(5))}\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          Increment by 5\n        </Button>\n      </ButtonGroup>\n    </>\n  );\n}\n","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\nimport { useHistory, useLocation } from \"react-router\";\n\nexport default function ServerError() {\n  const history = useHistory();\n  const { state } = useLocation<any>();\n  return (\n    <Container component={Paper}>\n      {state?.error ? (\n        <>\n          <Typography variant=\"h3\" color=\"error\" gutterBottom>\n            {state.error.title}\n          </Typography>\n          <Divider />\n          <Typography>\n            {state.error.detail || \"Interal server error\"}\n          </Typography>\n        </>\n      ) : (\n        <Typography variant=\"h5\" gutterBottom>\n          Server error\n        </Typography>\n      )}\n      <Button onClick={() => history.push(\"/catalog\")}>\n        Go back to the store\n      </Button>\n    </Container>\n  );\n}\n","import { TableContainer, Paper, Table, TableBody, TableRow, TableCell } from \"@mui/material\";\n// import { useStoreContext } from \"../../app/context/StoreContext\";\nimport { useAppSelector } from \"../../app/store/configureStore\";\nimport { currencyFormat } from \"../../app/util/util\";\n\ninterface Props {\n    subtotal?: number;\n}\n\nexport default function BasketSummary({ subtotal } : Props) {\n    // const { basket } = useStoreContext();\n    const { basket } = useAppSelector(state => state.basket);\n    \n    if(subtotal === undefined)\n        subtotal = basket?.items.reduce((sum, item) => sum + (item.price * item.quantity), 0) ?? 0;\n    const deliveryFee = subtotal > 10000 || subtotal === 0 ?  0 :  500;\n    return (\n        <>\n            <TableContainer component={Paper} variant={'outlined'}>\n                <Table>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell colSpan={2}>Subtotal</TableCell>\n                            <TableCell align=\"right\">{currencyFormat(subtotal)}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell colSpan={2}>Delivery fee*</TableCell>\n                            <TableCell align=\"right\">{currencyFormat(deliveryFee)}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell colSpan={2}>Total</TableCell>\n                            <TableCell align=\"right\">{currencyFormat(subtotal + deliveryFee)}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>\n                                <span style={{fontStyle: 'italic'}}>*Orders over $100 qualify for free delivery</span>\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    )\n}","import { Remove, Add, Delete } from \"@mui/icons-material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Box } from \"@mui/material\";\nimport { BasketItem } from \"../../app/models/basket\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { currencyFormat } from \"../../app/util/util\";\nimport { removeBasketItemAsync, addBasketItemAsync } from \"./basketSlice\";\n\ninterface Props {\n  items: BasketItem[];\n  isBasket?: boolean;\n}\n\nexport default function BasketTable({ items, isBasket = true }: Props) {\n  const dispatch = useAppDispatch();\n  const { status } = useAppSelector((state) => state.basket);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Product</TableCell>\n            <TableCell align=\"right\">Price</TableCell>\n            <TableCell align=\"center\">Quantity</TableCell>\n            <TableCell align=\"right\">Subtotal</TableCell>\n            {isBasket && <TableCell align=\"right\"></TableCell>}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {items.map((item) => (\n            <TableRow\n              key={item.productId}\n              sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                <Box display=\"flex\" alignItems=\"center\">\n                  <img\n                    src={item.pictureUrl}\n                    alt={item.name}\n                    style={{ height: 50, marginRight: 20 }}\n                  />\n                  <span>{item.name}</span>\n                </Box>\n              </TableCell>\n              <TableCell align=\"right\">{currencyFormat(item.price)}</TableCell>\n              <TableCell align=\"center\">\n                {isBasket && (\n                  <LoadingButton\n                    loading={\n                      status === \"pendingRemoveItem\" + item.productId + \"rem\"\n                    }\n                    onClick={() =>\n                      dispatch(\n                        removeBasketItemAsync({\n                          productId: item.productId,\n                          quantity: 1,\n                          name: \"rem\",\n                        })\n                      )\n                    }\n                    color=\"error\"\n                  >\n                    <Remove />\n                  </LoadingButton>\n                )}\n                {item.quantity}\n                {isBasket && (\n                  <LoadingButton\n                    loading={status === \"pendingAddItem\" + item.productId}\n                    onClick={() =>\n                      dispatch(\n                        addBasketItemAsync({ productId: item.productId })\n                      )\n                    }\n                    color=\"secondary\"\n                  >\n                    <Add />\n                  </LoadingButton>\n                )}\n              </TableCell>\n              <TableCell align=\"right\">\n                {currencyFormat(item.price * item.quantity)}\n              </TableCell>\n              {isBasket && (\n                <TableCell align=\"right\">\n                  <LoadingButton\n                    loading={\n                      status === \"pendingRemoveItem\" + item.productId + \"del\"\n                    }\n                    onClick={() =>\n                      dispatch(\n                        removeBasketItemAsync({\n                          productId: item.productId,\n                          quantity: item.quantity,\n                          name: \"del\",\n                        })\n                      )\n                    }\n                    color=\"error\"\n                  >\n                    <Delete />\n                  </LoadingButton>\n                </TableCell>\n              )}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import { Button, Grid, Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { useAppSelector } from \"../../app/store/configureStore\";\nimport BasketSummary from \"./BasketSummary\";\nimport BasketTable from \"./BasketTable\";\n\nexport default function BasketPage() {\n  // const { basket, setBasket, removeItem } = useStoreContext();\n  // const dispatch = useAppDispatch();\n  const { basket } = useAppSelector((state) => state.basket);\n\n  // const [status, setStatus] = useState({\n  //   loading: false,\n  //   name: \"\",\n  // });\n\n  // function handleAddItem(productId: number, name: string) {\n  //   setStatus({ loading: true, name });\n  //   agent.Basket.addItem(productId)\n  //     .then((basket) => dispatch(setBasket(basket)))\n  //     .catch((error) => console.log(error))\n  //     .finally(() => setStatus({ loading: false, name: \"\" }));\n  // }\n\n  // function handleRemoveItem(productId: number, quantity = 1, name: string) {\n  //   setStatus({ loading: true, name });\n  //   agent.Basket.removeItem(productId, quantity)\n  //     .then(() => dispatch(removeItem({productId, quantity})))\n  //     .catch((error) => console.log(error))\n  //     .finally(() => setStatus({ loading: false, name: \"\" }));\n  // }\n  //   const [loading, setLoading] = useState(true);\n  //   const [basket, setBasket] = useState<Basket | null>(null);\n\n  //   useEffect(() => {\n  //     agent.Basket.get()\n  //       .then((basket) => setBasket(basket))\n  //       .finally(() => setLoading(false));\n  //   }, []);\n\n  //   if (loading) return <LoadingComponent message=\"Loading basket...\" />;\n\n  if (!basket)\n    return <Typography variant=\"h3\">Your basket is empty.</Typography>;\n\n  return (\n    <>\n      <BasketTable items={basket.items} />\n      <Grid container>\n        <Grid item xs={6}></Grid>\n        <Grid item xs={6}>\n          <BasketSummary />\n          <Button\n            component={Link}\n            to=\"/checkout\"\n            variant=\"contained\"\n            size=\"large\"\n            fullWidth\n          >\n            Checkout\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import { TextField } from \"@mui/material\";\nimport { useController, UseControllerProps } from \"react-hook-form\";\n\ninterface Props extends UseControllerProps {\n  label: string;\n}\n\nexport default function AppTextInput(props: Props) {\n  const { fieldState, field } = useController({ ...props, defaultValue: \"\" });\n  return (\n    <TextField\n      {...props}\n      {...field}\n      fullWidth\n      variant=\"outlined\"\n      error={!!fieldState.error}\n      helperText={fieldState.error?.message}\n    />\n  );\n}\n","import { Checkbox, FormControlLabel } from \"@mui/material\";\nimport { useController, UseControllerProps } from \"react-hook-form\";\n\ninterface Props extends UseControllerProps {\n  label: string;\n  disabled: boolean;\n}\n\nexport default function AppCheckbox(props: Props) {\n  const { field } = useController({ ...props, defaultValue: false });\n\n  return (\n    <FormControlLabel\n      control={\n        <Checkbox\n          {...field}\n          checked={field.value}\n          color=\"secondary\"\n          disabled={props.disabled}\n        />\n      }\n      label={props.label}\n    />\n  );\n}\n","import Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport { useFormContext } from \"react-hook-form\";\nimport AppTextInput from \"../../app/components/AppTextInput\";\nimport AppCheckbox from \"../../app/components/AppCheckbox\";\n\nexport default function AddressForm() {\n  const { control, formState } = useFormContext();\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Shipping address\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={12}>\n          <AppTextInput control={control} name=\"fullName\" label=\"Full Name\" />\n        </Grid>\n        <Grid item xs={12}>\n          <AppTextInput control={control} name=\"address1\" label=\"Address 1\" />\n        </Grid>\n        <Grid item xs={12}>\n          <AppTextInput control={control} name=\"address2\" label=\"Address 2\" />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <AppTextInput control={control} name=\"city\" label=\"City\" />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <AppTextInput control={control} name=\"state\" label=\"State\" />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <AppTextInput control={control} name=\"zip\" label=\"Zipcode\" />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <AppTextInput control={control} name=\"country\" label=\"Country\" />\n        </Grid>\n        <Grid item xs={12}>\n          <AppCheckbox\n            disabled={!formState.isDirty}\n            name=\"saveAddress\"\n            label=\"Save this as default address\"\n            control={control}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport { useFormContext } from 'react-hook-form';\nimport AppTextInput from '../../app/components/AppTextInput';\n\nexport default function PaymentForm() {\n  const {control} = useFormContext();\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Payment method\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <AppTextInput name=\"nameOnCard\" label='Name on card' control={control} />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            // required\n            id=\"cardNumber\"\n            label=\"Card number\"\n            fullWidth\n            autoComplete=\"cc-number\"\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            // required\n            id=\"expDate\"\n            label=\"Expiry date\"\n            fullWidth\n            autoComplete=\"cc-exp\"\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            // required\n            id=\"cvv\"\n            label=\"CVV\"\n            helperText=\"Last three digits on signature strip\"\n            fullWidth\n            autoComplete=\"cc-csc\"\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControlLabel\n            control={<Checkbox color=\"secondary\" name=\"saveCard\" value=\"yes\" />}\n            label=\"Remember credit card details for next time\"\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}","import { Grid } from \"@mui/material\";\nimport Typography from \"@mui/material/Typography\";\nimport { useAppSelector } from \"../../app/store/configureStore\";\nimport BasketSummary from \"../basket/BasketSummary\";\nimport BasketTable from \"../basket/BasketTable\";\n\nexport default function Review() {\n  const { basket } = useAppSelector((state) => state.basket);\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Order summary\n      </Typography>\n      {basket && <BasketTable items={basket.items} isBasket={false} />}\n      <Grid container>\n        <Grid item xs={6}></Grid>\n        <Grid item xs={6}>\n          <BasketSummary />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import * as yup from 'yup';\n\nexport const validationSchema = [\n    yup.object({\n        fullName: yup.string().required(\"Full Name is required.\"),\n        address1: yup.string().required(\"Address Line 1 is required.\"),\n        address2: yup.string().required(\"Address Line 2 is required.\"),\n        city: yup.string().required(\"City is required.\"),\n        state: yup.string().required(\"State is required.\"),\n        zip: yup.string().required(\"Zip code is required.\"),\n        country: yup.string().required(\"Country is required.\"),\n    }),\n    yup.object(),\n    yup.object({\n        nameOnCard: yup.string().required(\"Name on card is required.\")\n    })\n]","import { Box, Button, Paper, Step, StepLabel, Stepper, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { FieldValues, FormProvider, useForm } from \"react-hook-form\";\nimport AddressForm from \"./AddressForm\";\nimport PaymentForm from \"./PaymentForm\";\nimport Review from \"./Review\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { validationSchema } from \"./checkoutValidation\";\nimport agent from \"../../app/api/agent\";\nimport { useAppDispatch } from \"../../app/store/configureStore\";\nimport { clearBasket } from \"../basket/basketSlice\";\nimport { LoadingButton } from \"@mui/lab\";\n\n\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\n\nfunction getStepContent(step: number) {\n    switch (step) {\n        case 0:\n            return <AddressForm/>;\n        case 1:\n            return <Review/>;\n        case 2:\n            return <PaymentForm/>;\n        default:\n            throw new Error('Unknown step');\n    }\n}\n\nexport default function CheckoutPage() {\n    \n    const [activeStep, setActiveStep] = useState(0);\n    const [orderNumber, setOrderNumber] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const dispatch = useAppDispatch();\n\n    const currentValidationSchema = validationSchema[activeStep];\n\n    const methods = useForm({\n        mode: 'all',\n        resolver: yupResolver(currentValidationSchema)\n    });\n\n    useEffect(() => {\n        agent.Account.fetchAddress()\n            .then(response => {\n                if(response) {\n                    methods.reset({...methods.getValues(), ...response, saveAddress: false})\n                }\n            })\n    }, [methods]);\n\n    const handleNext = async (data: FieldValues) => {\n        const { nameOnCard, saveAddress, ...shippingAddress } = data;\n        if(activeStep === steps.length - 1) {\n            setLoading(true);\n            try {\n                const orderNumber = await agent.Orders.create({saveAddress, shippingAddress})\n                setOrderNumber(orderNumber);\n                setActiveStep(activeStep + 1);\n                dispatch(clearBasket());\n                setLoading(false);\n            } catch (error) {\n                console.log(error);\n                setLoading(false);\n            }\n        } else {\n            setActiveStep(activeStep + 1);\n        }\n    };\n\n    const handleBack = () => {\n        setActiveStep(activeStep - 1);\n    };\n\n    return (\n        <FormProvider {...methods}>\n            <Paper variant=\"outlined\" sx={{my: {xs: 3, md: 6}, p: {xs: 2, md: 3}}}>\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n                Checkout\n            </Typography>\n            <Stepper activeStep={activeStep} sx={{pt: 3, pb: 5}}>\n                {steps.map((label) => (\n                    <Step key={label}>\n                        <StepLabel>{label}</StepLabel>\n                    </Step>\n                ))}\n            </Stepper>\n            <>\n                {activeStep === steps.length ? (\n                    <>\n                        <Typography variant=\"h5\" gutterBottom>\n                            Thank you for your order.\n                        </Typography>\n                        <Typography variant=\"subtitle1\">\n                            Your order number is #{orderNumber}. We have not emailed your order\n                            confirmation, and will not send you an update when your order has\n                            shipped as this is a fake store!\n                        </Typography>\n                    </>\n                ) : (\n                    <form onSubmit={methods.handleSubmit(handleNext)}>\n                        {getStepContent(activeStep)}\n                        <Box sx={{display: 'flex', justifyContent: 'flex-end'}}>\n                            {activeStep !== 0 && (\n                                <Button onClick={handleBack} sx={{mt: 3, ml: 1}}>\n                                    Back\n                                </Button>\n                            )}\n                            <LoadingButton\n                                loading={loading}\n                                disabled={!methods.formState.isValid}\n                                variant=\"contained\"\n                                type=\"submit\"\n                                sx={{mt: 3, ml: 1}}\n                            >\n                                {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\n                            </LoadingButton>\n                        </Box>\n                    </form>\n                )}\n            </>\n        </Paper>\n        </FormProvider>\n        \n    );\n}","import Avatar from \"@mui/material/Avatar\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { Paper } from \"@mui/material\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { FieldValues, useForm } from \"react-hook-form\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useAppDispatch } from \"../../app/store/configureStore\";\nimport { signInUser } from \"./accountSlice\";\n\nexport default function Login() {\n  const history = useHistory();\n  const location = useLocation<any>();\n  const dispatch = useAppDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: { isSubmitting, errors, isValid },\n  } = useForm({\n    mode: \"all\",\n  });\n\n  //   const [values, setValues] = useState({\n  //     username: \"\",\n  //     password: \"\",\n  //   });\n\n  //   const handleSubmit = (event: any) => {\n  //     event.preventDefault();\n  //     agent.Account.login(values);\n  //   };\n\n  //   function handleInputChange(event: any) {\n  //     const { name, value } = event.target;\n  //     setValues({ ...values, [name]: value });\n  //   }\n  async function submitForm(data: FieldValues) {\n    try {\n      await dispatch(signInUser(data));\n      history.push(location.state?.from?.pathname || \"/catalog\");\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <Container\n      component={Paper}\n      maxWidth=\"sm\"\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        p: 4,\n      }}\n    >\n      <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n        <LockOutlinedIcon />\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Sign in\n      </Typography>\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit(submitForm)}\n        noValidate\n        sx={{ mt: 1 }}\n      >\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          label=\"Username\"\n          autoFocus\n          {...register(\"username\", { required: \"Username is required\" })}\n          error={!!errors.username}\n          helperText={errors?.username?.message}\n        />\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          label=\"Password\"\n          type=\"password\"\n          {...register(\"password\", { required: \"Password is required\" })}\n          error={!!errors.password}\n          helperText={errors?.password?.message}\n        />\n        <LoadingButton\n          loading={isSubmitting}\n          disabled={!isValid}\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2 }}\n        >\n          Sign In\n        </LoadingButton>\n        <Grid container>\n          <Grid item>\n            <Link to=\"/register\">{\"Don't have an account? Sign Up\"}</Link>\n          </Grid>\n        </Grid>\n      </Box>\n    </Container>\n  );\n}\n","import Avatar from \"@mui/material/Avatar\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { Paper } from \"@mui/material\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { LoadingButton } from \"@mui/lab\";\nimport agent from \"../../app/api/agent\";\nimport { toast } from \"react-toastify\";\n\nexport default function Register() {\n  const history = useHistory();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { isSubmitting, errors, isValid },\n    setError,\n  } = useForm({\n    mode: \"all\",\n  });\n\n  function handleApiErrors(errors: any) {\n    if (errors) {\n      errors.forEach((error: string) => {\n        if (error.includes(\"Password\")) {\n          setError(\"password\", { message: error });\n        } else if (error.includes(\"Email\")) {\n          setError(\"email\", { message: error });\n        } else if (error.includes(\"Username\")) {\n          setError(\"username\", { message: error });\n        }\n      });\n    }\n  }\n\n  //   const [values, setValues] = useState({\n  //     username: \"\",\n  //     password: \"\",\n  //   });\n\n  //   const handleSubmit = (event: any) => {\n  //     event.preventDefault();\n  //     agent.Account.login(values);\n  //   };\n\n  //   function handleInputChange(event: any) {\n  //     const { name, value } = event.target;\n  //     setValues({ ...values, [name]: value });\n  //   }\n  //   async function submitForm(data: FieldValues) {\n  //     await dispatch(signInUser(data));\n  //     history.push('/catalog');\n  //   }\n\n  return (\n    <Container\n      component={Paper}\n      maxWidth=\"sm\"\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        p: 4,\n      }}\n    >\n      <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n        <LockOutlinedIcon />\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Register\n      </Typography>\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit((data) =>\n          agent.Account.register(data)\n            .then(() => {\n              toast.success(\"Registration successful - you can now login\");\n              history.push(\"/login\");\n            })\n            .catch((error) => handleApiErrors(error))\n        )}\n        noValidate\n        sx={{ mt: 1 }}\n      >\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          label=\"Username\"\n          autoFocus\n          {...register(\"username\", { required: \"Username is required\" })}\n          error={!!errors.username}\n          helperText={errors?.username?.message}\n        />\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          label=\"Email address\"\n          {...register(\"email\", {\n            required: \"Email is required\",\n            pattern: {\n              value: /^\\w+[\\w-.]*@\\w+((-\\w+)|(\\w*))\\.[a-z]{2,3}$/,\n              message: \"Not a valid email address\",\n            },\n          })}\n          error={!!errors.email}\n          helperText={errors?.email?.message}\n        />\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          label=\"Password\"\n          type=\"password\"\n          {...register(\"password\", {\n            required: \"Password is required\",\n            pattern: {\n              value:\n                /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/,\n              message: \"Password does not meet complexity requirement\",\n            },\n          })}\n          error={!!errors.password}\n          helperText={errors?.password?.message}\n        />\n        <LoadingButton\n          loading={isSubmitting}\n          disabled={!isValid}\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2 }}\n        >\n          Register\n        </LoadingButton>\n        <Grid container>\n          <Grid item>\n            <Link to=\"/login\">{\"Already have an account? Sign In\"}</Link>\n          </Grid>\n        </Grid>\n      </Box>\n    </Container>\n  );\n}\n","import { ComponentType } from \"react\";\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\nimport { useAppSelector } from \"../store/configureStore\";\n\ninterface Props extends RouteProps {\n  component: ComponentType<RouteComponentProps<any>> | ComponentType<any>;\n}\n\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\n  const { user } = useAppSelector(state => state.account);\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        user ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n","import { Button, Grid, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { BasketItem } from \"../../app/models/basket\";\nimport { Order } from \"../../app/models/order\";\nimport BasketSummary from \"../basket/BasketSummary\";\nimport BasketTable from \"../basket/BasketTable\";\n\ninterface Props {\n  order: Order;\n  setSelectedOrder: (id: number) => void;\n}\n\nexport default function OrderDetail({ order, setSelectedOrder }: Props) {\n    const subtotal = order.orderItems.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\n    return (\n        <>\n            <Box display='flex' justifyContent='space-between'>\n                <Typography sx={{ p: 2 }} gutterBottom variant=\"h4\">Order# {order.id} - {order.orderStatus}</Typography>\n                <Button onClick={() => setSelectedOrder(0) } sx={{ m: 2 }} size='large' variant=\"contained\" >Back to Order List</Button>\n            </Box>\n            <BasketTable items={order.orderItems as BasketItem[]} isBasket={false} />\n            <Grid container>\n                <Grid item xs={6} />\n                <Grid item xs={6}>\n                    <BasketSummary subtotal={subtotal} />\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n","import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport agent from \"../../app/api/agent\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { Order } from \"../../app/models/order\";\nimport { currencyFormat } from \"../../app/util/util\";\nimport OrderDetail from \"./OrderDetail\";\n\nexport default function Orders() {\n\n    const [orders, setOrders] = useState<Order[] | null>(null);\n    const [loading, setLoading] = useState(true);\n    const [selectedOrderNumber, setSelectedOrderNumber] = useState(0);\n\n    useEffect(() => {\n        setLoading(true);\n        agent.Orders.list()\n                .then(orders => setOrders(orders))\n                .catch(error => console.log(error))\n                .finally(() => setLoading(false))\n    },[])\n\n    if(loading) return <LoadingComponent  message=\"Loading orders...\"/>\n\n    if(selectedOrderNumber > 0) return (\n      <OrderDetail \n        order={orders?.find(o => o.id === selectedOrderNumber)!}\n        setSelectedOrder={setSelectedOrderNumber}\n      />\n    )\n \n    return (\n        <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Order number</TableCell>\n            <TableCell align=\"right\">Total</TableCell>\n            <TableCell align=\"right\">Order Date</TableCell>\n            <TableCell align=\"right\">Order status</TableCell>\n            <TableCell align=\"right\"></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {orders?.map((order) => (\n            <TableRow\n              key={order.id}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {order.id}\n              </TableCell>\n              <TableCell align=\"right\">{currencyFormat(order.total)}</TableCell>\n              <TableCell align=\"right\">{order.orderDate.split('T')[0]}</TableCell>\n              <TableCell align=\"right\">{order.orderStatus}</TableCell>\n              <TableCell align=\"right\">\n                  <Button onClick={() => setSelectedOrderNumber(order.id)}>\n                    View\n                  </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    )\n}","import Catalog from \"../../features/catalog/Catalog\";\nimport {\n  Container,\n  createTheme,\n  CssBaseline,\n  ThemeProvider,\n} from \"@mui/material\";\nimport Header from \"./Hearder\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ProductDetails from \"../../features/catalog/ProductDetails\";\nimport AboutPage from \"../../features/about/AboutPage\";\nimport ContactPage from \"../../features/contact/ContactPage\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ServerError from \"../errors/ServerError\";\nimport NotFound from \"../errors/NotFound\";\nimport { Route, Switch } from \"react-router-dom\";\nimport BasketPage from \"../../features/basket/BasketPage\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport CheckoutPage from \"../../features/checkout/CheckoutPage\";\nimport { useAppDispatch } from \"../store/configureStore\";\nimport { fetchBasketAsync } from \"../../features/basket/basketSlice\";\nimport Login from \"../../features/account/Login\";\nimport Register from \"../../features/account/Register\";\nimport { fetchCurrentUser } from \"../../features/account/accountSlice\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Orders from \"../../features/orders/Orders\";\nimport { render } from \"@testing-library/react\";\n\nfunction App() {\n  // const { setBasket } = useStoreContext();\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState(true);\n\n  const initApp = useCallback(async () => {\n    try {\n      await dispatch(fetchCurrentUser());\n      await dispatch(fetchBasketAsync());\n    } catch (error) {\n      console.log(error);\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    initApp().then(() => setLoading(false));\n  }, [initApp]);\n\n  const [darkMode, setDarkMode] = useState(false);\n  const paletteType = darkMode ? \"dark\" : \"light\";\n  const theme = createTheme({\n    palette: {\n      mode: paletteType,\n      background: {\n        default: paletteType === \"light\" ? \"#eaeaea\" : \"#121212\",\n      },\n    },\n  });\n\n  function themeChangeHandler() {\n    setDarkMode(!darkMode);\n  }\n\n  if (loading) return <LoadingComponent message=\"Initialising app...\" />;\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n      <CssBaseline />\n      <Header darkMode={darkMode} themeChangeHandler={themeChangeHandler} />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <Container  sx={{ mt: 4 }}>\n            <Switch>\n              <Route exact path=\"/catalog\" component={Catalog} />\n              <Route path=\"/catalog/:id\" component={ProductDetails} />\n              <Route path=\"/about\" component={AboutPage} />\n              <Route path=\"/contact\" component={ContactPage} />\n              <Route path=\"/server-error\" component={ServerError} />\n              <Route path=\"/basket\" component={BasketPage} />\n              <PrivateRoute path=\"/checkout\" component={CheckoutPage} />\n              <PrivateRoute path=\"/orders\" component={Orders} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/register\" component={Register} />\n              <Route component={NotFound} />\n            </Switch>\n          </Container>\n        )}\n      />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n// import { StoreProvider } from \"./app/context/StoreContext\";\n// import { configureStore } from \"./app/store/configureStore\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./app/store/configureStore\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\n// const store = configureStore();\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      {/* <StoreProvider> */}\n      <Provider store={store}>\n        <App />\n      </Provider>\n      {/* </StoreProvider> */}\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}